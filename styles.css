* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Helvetica Neue', Arial, sans-serif;
    background-color: #ffffff;
    color: #333333;
}

.container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 2rem;
    background: linear-gradient(145deg, #ffffff, #f0f0f0);
    border-radius: 20px;
    box-shadow: 
        0 10px 20px rgba(0,0,0,0.1),
        0 6px 6px rgba(0,0,0,0.1);
}

/* タブのスタイル */
.tab-container {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 2rem;
}

.tab-button {
    flex: 1;
    padding: 1rem;
    border: none;
    background-color: #f0f0f0;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: 8px;
    position: relative;
    overflow: hidden;
}

.tab-button::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: #4a90e2;
    transition: all 0.3s ease;
    transform: translateX(-50%);
}

.tab-button:hover::after {
    width: 100%;
}

.tab-button.active::after {
    width: 100%;
    background: #fff;
}

/* 表示部分の共通スタイル */
.tab-content {
    display: none;
    text-align: center;
}

.tab-content.active {
    display: block;
    animation: fadeIn 0.3s ease;
}

.display {
    font-size: clamp(3rem, 12vw, 7rem);
    font-weight: bold;
    margin: 2rem 0;
    color: #4a90e2;
}

/* コントロールボタンのスタイル */
.controls {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin: 1rem 0;
}

button {
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: 6px;
    background-color: #4a90e2;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #357abd;
}

/* プリセットボタンのスタイル */
.presets {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin: 1rem 0;
}

/* アニメーション */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* モバイル対応 */
@media (max-width: 600px) {
    .container {
        margin: 1rem auto;
        padding: 0.5rem;
    }

    .display {
        font-size: 2.5rem;
    }

    .controls {
        flex-direction: column;
        gap: 0.5rem;
    }

    .presets {
        flex-wrap: wrap;
    }

    button {
        padding: 1rem;
        width: 100%;
    }
}

.screen {
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    max-width: 600px;
    width: 100%;
    text-align: center;
}

h1 {
    color: #2196F3;
    margin-bottom: 20px;
}

.quiz-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
}

.pokemon-container {
    margin: 20px 0;
}

#pokemonImage {
    max-width: 200px;
    height: auto;
}

.choices-container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
    margin: 20px 0;
}

.choice-btn {
    width: 100%;
    background-color: #ffffff;
    border: 2px solid #2196F3;
    color: #2196F3;
    font-weight: bold;
    padding: 15px;
    font-size: 16px;
}

.choice-btn:hover {
    background-color: #2196F3;
    color: white;
}

.choice-btn:disabled {
    background-color: #f0f0f0;
    border-color: #cccccc;
    color: #666666;
    cursor: not-allowed;
}

.result-message {
    margin: 10px 0;
    font-weight: bold;
    min-height: 24px;
}

.correct {
    color: #4CAF50;
}

.incorrect {
    color: #F44336;
}

.timer {
    color: #FF5722;
    font-weight: bold;
}

.quiz-history {
    margin: 20px 0;
    text-align: left;
    max-height: 300px;
    overflow-y: auto;
    padding: 10px;
    border: 1px solid #e0e0e0;
    border-radius: 5px;
}

.history-item {
    padding: 15px;
    margin: 10px 0;
    border-radius: 8px;
    background-color: #f8f8f8;
    display: flex;
    gap: 15px;
    align-items: center;
}

.history-item.correct {
    border-left: 4px solid #4CAF50;
}

.history-item.incorrect {
    border-left: 4px solid #F44336;
}

.history-pokemon-image {
    width: 80px;
    height: 80px;
    object-fit: contain;
    background-color: #fff;
    border-radius: 5px;
    padding: 5px;
}

.history-content {
    flex: 1;
}

.history-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 5px;
}

.history-details {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.question-num {
    font-weight: bold;
    color: #2196F3;
}

.pokemon-name {
    color: #333;
}

.selected-answer {
    color: #666;
}

.result-icon {
    font-size: 1.2em;
}

.final-score {
    font-size: 1.5em;
    font-weight: bold;
    color: #2196F3;
    margin: 20px 0;
}

/* ローディング画面のスタイル */
.loading-pokemon-container {
    margin: 20px auto;
    width: 200px;
    height: 200px;
    position: relative;
}

.loading-pokemon {
    width: 100%;
    height: 100%;
    object-fit: contain;
    filter: brightness(0); /* シルエット化 */
    animation: bounce 1s infinite alternate;
}

.loading-spinner {
    width: 50px;
    height: 50px;
    margin: 20px auto;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #2196F3;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes bounce {
    from {
        transform: translateY(0);
    }
    to {
        transform: translateY(-10px);
    }
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.timer-input-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin: 2rem 0;
}

.time-unit {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}

.time-input {
    font-size: clamp(3rem, 12vw, 7rem);
    width: 2ch;
    font-weight: bold;
    text-align: center;
    border: none;
    background: transparent;
    color: #4a90e2;
    padding: 0;
    -moz-appearance: textfield;
}

.time-input::-webkit-inner-spin-button,
.time-input::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.time-separator {
    font-size: clamp(3rem, 12vw, 7rem);
    font-weight: bold;
    color: #4a90e2;
}

.time-control-btn {
    width: 100%;
    padding: 0.4rem;
    font-size: 1rem;
    background-color: #f0f0f0;
    color: #666;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.time-control-btn:hover {
    background-color: #e0e0e0;
}

/* タイマー動作中のスタイル */
.timer-running .time-input,
.timer-running .time-control-btn,
.timer-running .preset-btn {
    pointer-events: none;
    opacity: 0.5;
}

/* 不要なスタイルを削除 */
.time-controls {
    display: none;
}

/* プリセットボタンのスタイル調整 */
.preset-btn {
    background-color: #f0f0f0;
    color: #666;
    transition: all 0.3s ease;
    transform: translateY(0);
}

.preset-btn:hover {
    background-color: #e0e0e0;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
}

.date-display {
    font-size: clamp(2rem, 6vw, 3.5rem);
    margin-bottom: 1.5rem;
}

/* 時計の表示スタイルを統一 */
.time-display {
    font-size: clamp(3rem, 12vw, 7rem);
    font-family: monospace; /* 等幅フォントで統一 */
    min-height: 1.2em; /* 高さを固定して切り替え時のガタつきを防ぐ */
}

/* トグルボタンのスタイル */
.toggle-button {
    min-width: 120px;
    padding: 1rem 2rem;
    font-size: clamp(1rem, 3vw, 1.5rem);
    transition: all 0.3s ease;
    transform: translateY(0);
}

.toggle-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
}

.toggle-button.running {
    background-color: #e74c3c;
}

# シンプルタイムツール

ストップウォッチ、タイマー、デジタル時計の機能を提供するシンプルなWebアプリケーション

## 機能

- ストップウォッチ（時:分:秒.ミリ秒）
- タイマー（プリセット機能付き）
- デジタル時計（12/24時間表示切替可能）

## 使用技術

- HTML5
- CSS3
- JavaScript 